Domain Modeling:


1--> Domain Modeling has following steps:

        • Identify concepts (classes)
        • Their properties (attributes/fields)
        • Their behaviors (operations/methods)
        • And the relationships between them
        
        
2--> Grammatical Parsing:In this method we assign roles based on parts of speech

        • Noun: class or attribute
        • Adjective: attribute or subclass
        • Verb: operation
        
        For example:
        “Graduate and undergraduate students may apply to the program.The application consists of a recommendation
         letter and personal statement.”
         
                Nouns:
                        • Students
                        • Program
                        • Application
                        • Letter
                        • Statement
               Adjectives:
                        • Graduate
                        • Undergraduate
               Verbs:
                        • Apply
                        • Consists
                        
          A noun should be a class if:
                • it has multiple attributes and/or operations
                • all attributes/operations are common to all
                instances of the class
                • Otherwise it should likely be an "attribute" of
                another class
                
          An adjective should represent a subclass of another class if:
                • different adjectives would imply different or
                additional operations or behavior
                • different adjectives would imply different
                attributes
                • Otherwise, an adjective should be an
                attribute of a class
                
         Verbs: in which class do they belong?    
                 Certain verbs are more indicative of relationships between classes than they are
                 of operations: contains, has, is, uses, consists
                 
                 modelling the above example:
                 Student may apply to the program
                        • Subject: student
                        • Direct object: program
                         “apply” (verb) operation should go in Student class
                         
         Design for the above example:
         
                 Class: Student
                        • Attributes/Subclasses: Graduate; Undergraduate
                        • Operations: Apply
                 Class: Letter
                 Class: Statement
                 Class: Application
                 Class: Program
         Relationship:                 
                 Graduate Student "is a" Student
                 Undergraduate Student "is a" Student
                 Application "consists of" Letter and Statement
                 Student "uses" Application
                 Student is "associated with" Program
                 
Unified Modeling Language:

1) The Unified Modeling Language (UML) is a general-purpose, developmental, modeling language in the field of software engineering, that     
   is intended to provide a standard way to visualize the design of a system.
   
2) "is-a" relationship can be generalisation or realisation
        In Java:
                • Generalization = “extends” a (concrete) class
                • Realization = “implements” an interface
   "has-a" relationship can be aggregation or composition
        In Java, both are implemented by having one class as a field/attribute of another
        
   "uses" relationship is known as dependency
   
3) Based on the understanding of UMLs, we can translate that to java code.




